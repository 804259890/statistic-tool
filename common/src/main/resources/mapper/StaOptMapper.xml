<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.statistic.dao.mapper.StaOptMapper">
  <resultMap id="BaseResultMap" type="com.platon.statistic.dao.entity.StaOpt">
    <result column="statiscal_date" jdbcType="TIMESTAMP" property="statiscalDate" />
    <result column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="hash" jdbcType="INTEGER" property="hash" />
    <result column="tx_type" jdbcType="INTEGER" property="txType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    statiscal_date, node_id, node_name, `type`, hash, tx_type, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.platon.statistic.dao.entity.StaOptExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sta_opt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.platon.statistic.dao.entity.StaOptExample">
    delete from sta_opt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platon.statistic.dao.entity.StaOpt">
    insert into sta_opt (statiscal_date, node_id, node_name, 
      `type`, hash, tx_type, 
      create_time, update_time)
    values (#{statiscalDate,jdbcType=TIMESTAMP}, #{nodeId,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{hash,jdbcType=INTEGER}, #{txType,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.platon.statistic.dao.entity.StaOpt">
    insert into sta_opt
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="statiscalDate != null">
        statiscal_date,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="hash != null">
        hash,
      </if>
      <if test="txType != null">
        tx_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="statiscalDate != null">
        #{statiscalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="hash != null">
        #{hash,jdbcType=INTEGER},
      </if>
      <if test="txType != null">
        #{txType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platon.statistic.dao.entity.StaOptExample" resultType="java.lang.Long">
    select count(*) from sta_opt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sta_opt
    <set>
      <if test="record.statiscalDate != null">
        statiscal_date = #{record.statiscalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeName != null">
        node_name = #{record.nodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.hash != null">
        hash = #{record.hash,jdbcType=INTEGER},
      </if>
      <if test="record.txType != null">
        tx_type = #{record.txType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sta_opt
    set statiscal_date = #{record.statiscalDate,jdbcType=TIMESTAMP},
      node_id = #{record.nodeId,jdbcType=VARCHAR},
      node_name = #{record.nodeName,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      hash = #{record.hash,jdbcType=INTEGER},
      tx_type = #{record.txType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into sta_opt
    (statiscal_date, node_id, node_name, `type`, hash, tx_type, create_time, update_time
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.statiscalDate,jdbcType=TIMESTAMP}, #{item.nodeId,jdbcType=VARCHAR}, #{item.nodeName,jdbcType=VARCHAR}, 
        #{item.type,jdbcType=INTEGER}, #{item.hash,jdbcType=INTEGER}, #{item.txType,jdbcType=INTEGER}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into sta_opt (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'statiscal_date'.toString() == column.value">
          #{item.statiscalDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'node_id'.toString() == column.value">
          #{item.nodeId,jdbcType=VARCHAR}
        </if>
        <if test="'node_name'.toString() == column.value">
          #{item.nodeName,jdbcType=VARCHAR}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'hash'.toString() == column.value">
          #{item.hash,jdbcType=INTEGER}
        </if>
        <if test="'tx_type'.toString() == column.value">
          #{item.txType,jdbcType=INTEGER}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>